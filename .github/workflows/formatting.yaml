name: formatting and linting checks

on:
  workflow_call:
    inputs:
      ruff_version:
        description: "The version number pip specification of the ruff package that might be installed to run format checks. Empty string will install newest version.  Example: '0.9.4' or '<1.0.0'."
        default: ">=0.9,<0.9.20"
        required: false
        type: string
      flake8_version:
        description: "The version number pip specification of the flake8 package that might be installed. Empty string will install newest version. Example: '==7.1'"
        default: "==7.1.1"
        required: false
        type: string
      black_version:
        description: "The version number pip specification of the black package that might be installed. Empty string will install newest version. Example: '==25.1' or '>=25'"
        default: ">=25.1,<26.0"
        required: false
        type: string
      isort_version:
        description: "The version number pip specification of the isort package that might be installed. Empty string will install newest version. Example: '==6'"
        default: ">=6,<7"
        required: false
        type: string

jobs:
  check-tooling:
    outputs:
      format_tool: ${{ steps.tooling.outputs.format_tool }}
      lint_tool: ${{ steps.tooling.outputs.lint_tool }}
      isort_tool: ${{ steps.tooling.outputs.isort_tool }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: curl
        uses: sozo-design/curl@v1.0.2
        with:
          args: -O https://raw.githubusercontent.com/lsst/rubin_workflows/tickets/DM-48886/bin/determine-tooling
      - name: Check which tooling to use
        id: tooling
        run: |
          format_tool=$(python determine-tooling format)
          echo "format tool: ${format_tool}"
          echo "format_tool=${format_tool}" >> "${GITHUB_OUTPUT}"

          lint_tool=$(python determine-tooling lint)
          echo "lint tool: ${lint_tool}"
          echo "lint_tool=${lint_tool}" >> "${GITHUB_OUTPUT}"

          isort_tool=$(python determine-tooling isort)
          echo "isort tool: ${isort_tool}"
          echo "isort_tool=${isort_tool}" >> "${GITHUB_OUTPUT}"
  format_with_ruff:
    needs: [check-tooling]
    runs-on: ubuntu-latest
    if: "${{ needs.check-tooling.outputs.format_tool == 'ruff' }}"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install uv
          uv pip install --system 'ruff${{ inputs.ruff_version }}'
      - name: Run Ruff format
        run: ruff format --check --diff .
  format_with_black:
    needs: [check-tooling]
    runs-on: ubuntu-latest
    if: "${{ needs.check-tooling.outputs.format_tool == 'black' }}"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install uv
          uv pip install --system 'black${{ inputs.black_version }}'
      - name: Run black format
        run: |
          black --check --verbose --diff \
            $(test -e bin.src/ && echo 'bin.src/*') \
            $(test -e python/ && echo 'python/') \
            $(test -e tests/ && echo 'tests/')
  lint_with_ruff:
    needs: [check-tooling]
    runs-on: ubuntu-latest
    if: "${{ needs.check-tooling.outputs.lint_tool == 'ruff' }}"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install uv
          uv pip install --system 'ruff${{ inputs.ruff_version }}'
      - name: Run Ruff check
        run: ruff check --output-format github .
  lint_with_flake8:
    needs: [check-tooling]
    runs-on: ubuntu-latest
    if: "${{ needs.check-tooling.outputs.lint_tool == 'flake8' }}"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install flake8
        run: |
          python -m pip install uv
          uv pip install --system 'flake8${{ inputs.flake8_version }}' flake8-github-annotations

      - name: Run linter
        run: flake8 --format github
  isort:
    needs: [check-tooling]
    runs-on: ubuntu-latest
    if: "${{ needs.check-tooling.outputs.isort_tool == 'isort' }}"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install isort
        run: |
          pip install uv
          uv pip install --system 'isort${{ inputs.isort_version }}'

      - name: Check package sorting
        run: |
          isort --df --check-only \
               $(test -e bin.src/ && echo 'bin.src/') \
               $(test -e python/ && echo 'python/') \
               $(test -e tests/ && echo 'tests/')
